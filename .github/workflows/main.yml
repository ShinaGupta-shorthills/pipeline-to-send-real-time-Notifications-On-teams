name: Deploy EC2 Ubuntu Instance

on:
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Create SSH key file
        run: |
          echo "${{ secrets.DEVOPS_KEY }}" > devops-key-1.pem
          chmod 400 devops-key-1.pem

      - name: Launch EC2 instance
        id: ec2
        run: |
          INSTANCE_ID=$(aws ec2 run-instances \
            --image-id ami-0c7217cdde317cfec \
            --count 1 \
            --instance-type t2.micro \
            --key-name devops-key-1 \
            --security-group-ids sg-03eebec8dc1bbd9df \
            --subnet-id subnet-0ba04bb1a5c049ec7 \
            --tag-specifications 'ResourceType=instance,Tags=[{Key=Name,Value=MyUbuntuInstance}]' \
            --region us-east-1 \
            --query 'Instances[0].InstanceId' \
            --output text)

          echo "Launched instance with ID: $INSTANCE_ID"
          echo "INSTANCE_ID=$INSTANCE_ID" >> $GITHUB_ENV

          aws ec2 wait instance-running --instance-ids $INSTANCE_ID --region us-east-1

          PUBLIC_IP=$(aws ec2 describe-instances \
            --instance-ids $INSTANCE_ID \
            --region us-east-1 \
            --query 'Reservations[0].Instances[0].PublicIpAddress' \
            --output text)

          echo "EC2_PUBLIC_IP=$PUBLIC_IP" >> $GITHUB_ENV
          echo "Instance Public IP: $PUBLIC_IP"

      - name: Wait for EC2 SSH to become available
        run: |
          echo "Waiting 60 seconds for SSH service to be ready..."
          sleep 60

      - name: Install Nginx on EC2
        run: |
          ssh -o StrictHostKeyChecking=no -i devops-key-1.pem ubuntu@$EC2_PUBLIC_IP << EOF
            sudo apt update
            sudo apt install -y nginx
            sudo systemctl enable nginx
            sudo systemctl start nginx
          EOF

  notify:
    needs: deploy
    runs-on: ubuntu-latest
    if: always()

    steps:
      - name: Notify Microsoft Teams
        run: |
          RESULT="${{ needs.deploy.result }}"
          COLOR="FFA500"
          STATUS="⚠️ Deployment Status Unknown"

          if [ "$RESULT" == "success" ]; then
            COLOR="00FF00"
            STATUS="✅ Deployment Succeeded"
          elif [ "$RESULT" == "failure" ]; then
            COLOR="FF0000"
            STATUS="❌ Deployment Failed"
          fi

          curl -H 'Content-Type: application/json' \
            -d "{
              \"@type\": \"MessageCard\",
              \"@context\": \"http://schema.org/extensions\",
              \"themeColor\": \"$COLOR\",
              \"summary\": \"EC2 Deployment Status\",
              \"sections\": [{
                \"activityTitle\": \"$STATUS\",
                \"text\": \"The EC2 deployment workflow has completed with result: **$RESULT**.\n\n[View Logs](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})\"
              }]
            }" \
            ${{ secrets.TEAMS_WEBHOOK }}
